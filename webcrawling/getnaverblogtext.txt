def get_naver_blog_text(client_id_, client_secret_, keyword):
    client_id = client_id_
    client_secret = client_secret_
    encText = urllib.parse.quote(keyword)
    url = "https://openapi.naver.com/v1/search/blog?query=" + encText # json 결과
    # url = "https://openapi.naver.com/v1/search/blog.xml?query=" + encText # xml 결과

    request = urllib.request.Request(url)
    request.add_header("X-Naver-Client-Id",client_id)
    request.add_header("X-Naver-Client-Secret",client_secret)

    response = urllib.request.urlopen(request)
    rescode = response.getcode()
    if(rescode==200):
        response_body = response.read()
        print(response_body.decode('utf-8'))
        
        response_body.decode('utf-8')
        response_body_dict = json.loads(response_body.decode('utf-8'))
        blog_post_url = response_body_dict['items'][0]['link'].replace("amp;", "")

        get_blog_post_content_code = requests.get(blog_post_url)
        get_blog_post_content_text = get_blog_post_content_code.text
        get_blog_post_content_soup = BeautifulSoup(get_blog_post_content_text, 'lxml')
    
        real_blog_post_url = "http://blog.naver.com" + get_blog_post_content_soup.select('#mainFrame')[0].get('src')
        get_real_blog_post_content_code = requests.get(real_blog_post_url)
        get_real_blog_post_content_text = get_real_blog_post_content_code.text
        get_real_blog_post_content_soup = BeautifulSoup(get_real_blog_post_content_text, 'lxml')
        
        contents = []
        
        for content in get_real_blog_post_content_soup.select('div#postViewArea'):
            blog_post_content_text = content.get_text()
            remove_html_tag = re.compile('<.*?>')
            blog_post_full_contents = str(blog_post_content_text)
            
            contents.append(blog_post_full_contents)
            
            return ' '.join(contents)
    
    else:
        print("Error Code:" + rescode)
        return None